#!/usr/bin/env bash

# Installs the trash_util:
#+	1. Gets paths to all scripts
#+	2. Sets aliases for 'rm', 'rmf', and 'restore'
#+	3. Schedules cron tabs


set -e
declare -i MAX_TTL
errlog="$(realpath $(dirname ${BASH_SOURCE[0]}))/.utilities/.errlog"

# catch unknown errors
trap 'echo $0: Error on $LINENO >> $errlog; echo FATAL: Installation failed. See how to uninstall <here>. Then try to re-run the setup.' ERR

# -- MAIN ENTRY -- #
# -- global variables -- #
trash_util_dir="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
IFS=' ' read -a trash_util_files <<< "rm rmf restore"
bash_rc="$HOME/.bashrc"
aliases=""

# print message
echo "installing 'trash' utility..."
sleep 1

# get/set bash_profile file
if [[ ! -f "$bash_rc" ]]; then
	if [[ -f "$HOME/.bash_profile" ]]; then
		bash_rc="$HOME/.bash_profile"
	else
		# create bashrc
		touch "$bash_rc"
	fi
fi


# check if already installed and proceed iff otherwise
count="$(cat $bash_rc | grep -wc 'TRASH_UTIL_DIR' || true)"
if ((count > 0)); then
	echo "[ERROR]: trash_util already installed" 1>&2
	echo "$0: Error on line $LINENO(Already installed)"
	exit 1
fi


# create all aliases
for file in ${trash_util_files[@]}; do
	aliases+="alias $file="
	if [[ "$file" == "rm" ]]; then
		file="trash"
	fi
	aliases+="'$trash_util_dir/.utilities/$file'\n"
done

# get maximum time to live(max_ttl) of files in trash
read -p "Set max days a file will be in trash(30 default): " MAX_TTL
if (($MAX_TTL <= 0)); then
	MAX_TTL=30
fi

# write aliases to bash_profile file
cat >> "$bash_rc" <<EOF

# ---- trash_util [start] ---- #
$(echo -e $aliases)
# set env variable
export TRASH_UTIL_DIR="$trash_util_dir"
export MAX_TTL="$MAX_TTL"
# ----  trash_util [end]  ---- #
EOF

# define error log
errlog="$trash_util_dir/.utilities/.errlog"

# schedule crontabs
#+ cron_scheduler
cron_path="$trash_util_dir/.utilities/cron_scheduler"
cron_exists="$(crontab -l 2>>"$errlog" | grep -wc "$cron_path" || true)"
if ((cron_exists == 0)); then
	"$cron_path"
fi

#+ on_reboot_cron
cron_exists="$(crontab -l 2>>"$errlog"| grep -wc "@reboot $cron_path" || true)"
if ((cron_exists == 0)); then
	"$trash_util_dir/.utilities/on_reboot_cron"
fi
echo "[SUCCESS]: installation complete." 2>>"$errlog"
echo -e "\tRelaunch your shell and enjoy." 2>>"$errlog"
