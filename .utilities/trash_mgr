#!/usr/bin/env bash

# trash_mgr: manages the content of the '.trash' directory
#+ -> scans through files in trash and deletes them permanently iff
#+ file has spent up to or more than 30 days in trash.
#+ -> permanently deletes the error log file created by the executing cron

set -e

# -- global variables -- #
trash="$HOME/.trash"								# abs path to trash
rmf="$TRASH_UTIL_DIR/.utilities/rmf"				# abs path to rmf script
errlog="$(dirname $(realpath ${BASH_SOURCE[0]}))/.errlog"	# abs to error log file
declare -a files									# array of files in trash
max_ttl="$MAX_TTL"									# file's max ttl (days)

# error handler
on_error_exec()
{
	echo "[FATAL]: some error occured. see $errlog" 2>>"$errlog"
}
trap 'on_error_exec' ERR


# read files from trash
while read line; do
	files+=("$line")
done < <(ls "$trash" 2>>"$errlog")

# calculate time lived in trash and del if ttl >= max_ttl
for file in ${files[@]}; do
	base_fn="$(basename "$file")"
	stat_res="$(stat -c %z "$trash/$base_fn")"
	file_mod_time="$(date -d "$stat_res" +%s)"
	time_today="$(date -d "now" +%s)"
	diff="$((time_today - file_mod_time))"
	days="$((diff / 86400))"
	if (($days >= $max_ttl)); then
		"$rmf" "$trash/$base_fn" 2>>"$errlog"
	fi
done

# perm del cron_scheduler's error logfile if trash_mgr executes
"$rmf" "$errlog" 2>>"$errlog"
